'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.ModeSelect = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ModeSelect = exports.ModeSelect = {
    id: 1017,
    caption: '模式选择',
    editText: '模式选择标题',
    originCaption: '模式选择',
    fieldType: 'boolean',
    width: 120,
    height: 120,
    cssFile: '../static/widgets/ModeSelect/style.css',
    icon: '../static/img/widgets/mode-icon.png',
    iconActive: '../static/img/widgets/mode-icon-active.png',
    grid: ['text', 'style', 'interactive', 'size', 'exterior', 'hierarchy'],
    scheme: ['caption', 'text', 'show', 'image', 'multi[0]', 'mode'],
    prev: _react2.default.createClass({
        render: function render() {
            return _react2.default.createElement(
                'li',
                { className: 'widget widget-right' },
                _react2.default.createElement('img', _extends({}, this.props, { src: '../static/img/widgets/modeSelect.png', className: 'icon' })),
                _react2.default.createElement('img', _extends({}, this.props, { src: '../static/img/widgets/modeSelect-active.png', className: 'icon-active' })),
                _react2.default.createElement(
                    'span',
                    null,
                    '\u6A21\u5F0F\u9009\u62E9'
                )
            );
        }
    }),
    dom: 'React.createClass({\n            swiperHeight:0,\n            swiperTop:0,\n            swiperDomStyle:0,\n            getInitialState: function(){\n                var modeName = this.props.statusSet[0]?this.props.statusSet[0].statusName:\'\';\n                return {\n                    modeName:modeName,\n                    modeIndex:0,\n                    modeArr:[],\n                    switchStatus:2,\n                    show:false,\n                };\n            },\n            componentDidMount: function() {\n                var _state = typeof __props !== \'undefined\' ? __props : \'\';\n                var wid = this.props.userWidgetID,modeArr = this.state.modeArr;\n                if(!_state.hiddenArray&&this.props.statusVisibility==2){\n                    AppActions.init(wid);\n                }\n                //\u521D\u59CB\u5316\u6A21\u5F0F\u6570\u7EC4\n                if(_state){\n                    this.props.statusSet.map(function(item,index){\n                        if(item.statusName){\n                            modeArr.push(item.statusName);\n                        }\n                    });\n                }\n                if(wid && sessionStorage.getItem(wid)){\n                    var seesionValue = sessionStorage.getItem(wid);\n                    var sessionState = JSON.parse(seesionValue);\n                    this.setState(sessionState);\n                }\n                this.setState({modeArr:modeArr});\n            },\n            componentDidUpdate:function(){\n                var sessionValue = JSON.stringify(this.state);\n                if(this.props.userWidgetID){\n                    sessionStorage.setItem(this.props.userWidgetID,sessionValue);\n                }\n            },\n            startrange:function(e){\n                //\u5F00\u59CB\u6ED1\u52A8\u65F6\u95F4\u523B\u5EA6 \u8BB0\u5F55\u521D\u59CB\u5750\u6807\u503C\n                e.stopPropagation();\n                e.preventDefault();\n                var yvalue = parseInt(e.touches[0].clientY);\n                this.setState({\n                    oldy: yvalue\n                });\n            },\n            moverange:function(e){\n                //\u6ED1\u52A8\u65F6\u95F4\u523B\u5EA6 \u5224\u65AD\u6ED1\u52A8\u7C7B\u578B\u5E76\u6539\u53D8\u523B\u5EA6\u6761\u7684top\u503C \u4EA7\u751F\u6ED1\u52A8\u89C6\u89C9\u6548\u679C\n                e.stopPropagation();\n                e.preventDefault();\n                var yvalue = parseInt(e.touches[0].clientY);\n                var oldy = parseInt(this.state.oldy);\n                var value = (yvalue-oldy)/1.72;\n                if(value>20) value=20;\n                if(value<-20) value=-20;\n                this.setState({\n                        newy: yvalue,\n                        modetop:value\n                });\n            },\n            endrange:function(e){\n                //\u6ED1\u52A8\u7ED3\u675F \u8BA1\u7B97\u6ED1\u52A8\u8303\u56F4 \u5FFD\u7565\u592A\u5C0F\u7684\u6ED1\u52A8(20\u5185) \u7136\u540E\u8C03\u6574\u9009\u4E2D\u503C\u5E76\u91CD\u7F6E\u65F6\u95F4\u523B\u5EA6\u6761\n                e.stopPropagation();\n                e.preventDefault();\n                var newy = parseInt(this.state.newy);//\u6ED1\u52A8\u7ED3\u675F\u65F6\u7684y\u503C\n                var oldy = parseInt(this.state.oldy);//\u6ED1\u52A8\u5F00\u59CB\u65F6\u7684y\u503C\n                var modeName = parseInt(this.state.modeName);//\u4E0A\u4E00\u6B21\u9009\u4E2D\u7684\u6A21\u5F0F\u540D\u79F0\n                var modeArr = this.state.modeArr;//\u53EF\u9009\u6A21\u5F0F\u6570\u7EC4\n                var modeIndex = parseInt(this.state.modeIndex);//\u4E0A\u6B21\u9009\u4E2D\u7684\u6A21\u5F0F\u5BF9\u5E94\u6570\u7EC4\u4E2D\u7D22\u5F15\n                //\u5411\u4E0A\u6ED1\n                if(newy-oldy>20){\n                    var rangestep = parseInt((newy-oldy)/50)>0 ? parseInt((newy-oldy)/50) : 1;\n                    modeIndex = modeIndex-rangestep;\n                    modeIndex = modeIndex<0?0:modeIndex;\n                    modeName = modeArr[modeIndex];\n                    this.setState({\n                        modeName:modeName,\n                        modeIndex:modeIndex,\n                        modetop:0\n                    });\n                };\n                //\u5411\u4E0B\u6ED1\n                if(newy-oldy<-20){\n                    var rangestep = parseInt((oldy-newy)/50)>0 ? parseInt((oldy-newy)/50) : 1;\n                    modeIndex = modeIndex+rangestep;\n                    modeIndex = (modeIndex>=modeArr.length)?(modeArr.length-1):modeIndex;\n                    modeName = modeArr[modeIndex];\n                    this.setState({\n                        modeName:modeName,\n                        modeIndex:modeIndex,\n                        modetop:0\n                    });\n                };\n                this.setState({modetop:0});//\u91CD\u7F6E\u4E3A\u672A\u62D6\u52A8\u72B6\u6001\n            },\n            endDefault:function(e){\n                //\u963B\u6B62IOS\u4E0A\u5192\u6CE1\u89E6\u53D1iscroll\u4E8B\u4EF6\n                e.stopPropagation();\n                e.preventDefault();\n            },\n            cancelMode:function(e){\n                e.stopPropagation();\n                e.preventDefault();\n                //\u53D6\u6D88\u9009\u62E9\n                var switchValue = 2;\n                var selectShow = false;\n                this.setState({\n                    switchStatus:switchValue,\n                    show:selectShow\n                });\n            },\n            submitMode:function(e){\n                var modeIndex = this.state.modeIndex,\n                    modeName = this.state.modeName;\n                var item = this.props.eventSet[modeIndex];\n                this.setState({\n                    statusName:modeName,\n                    show:false\n                });\n                var sessionValue = JSON.stringify(this.state);\n                if(this.props.userWidgetID){\n                    sessionStorage.setItem(this.props.userWidgetID,sessionValue);\n                }\n                if (item.eventType==1) {\n                    if(item.commandType==2){\n                        AppActions.complexCommand(item.commandConfigList);\n                    }else{\n                        AppActions.trigger(item.eventField, item.eventValue, item.updateFlag,item.byteLength);\n                    }\n                } else if (item.eventType==2) {\n                    location.hash = \'#/page/\' + item.checkedPageId\n                }else if (item.eventType==3 || item.eventType==4) {\n                    item.userWidgetID = userWidgetID;\n                    item.status = item[\'activeStatusField\'];\n                    AppActions.toggle(item);\n                }\n            },\n            handleClick:function(e){\n                var swiperDom = document.querySelector(\'.swiper-wrapper\');\n                var swiperSlide = document.getElementsByClassName(\'swiper-slide\');\n                var swiperContain = document.getElementsByClassName(\'swiper-container\');\n                if(swiperSlide.length>0){\n                    this.swiperHeight = swiperContain[0].style.height;\n                    this.swiperTop = swiperContain[0].style.top;\n                    this.swiperDomStyle = swiperDom.style.transform;\n\n                    swiperDom.style.transform = "none";//swiper\u91CC\u9762\u7528\u4E86transform  \u5BFC\u81F4fixed\u5931\u6548\n                    swiperContain[0].style.height = document.body.scrollHeight+\'px\';\n                    swiperContain[0].style.top = "0";\n                    for(var i=0 ; i<swiperSlide.length;i++){\n                        swiperSlide[i].style.transform = "none";\n                        swiperSlide[i].className = swiperSlide[i].className + " swiper-no-swiping";\n                    }\n                } \n                var switchValue = this.state.switchStatus==1?2:1;\n                var selectShow = switchValue==1?true:false;\n                this.setState({\n                    switchStatus:switchValue,\n                    show:selectShow\n                });\n\n                // var sessionValue = JSON.stringify(this.state);\n                // if(this.props.userWidgetID){\n                //     sessionStorage.setItem(this.props.userWidgetID,sessionValue);\n                // }\n            },\n            render: function() {\n                var modetop = this.state.modetop || 0;\n                var modeArr = this.state.modeArr;\n                var modeIndex = parseInt(this.state.modeIndex);\n                var switchClass = this.state.switchStatus==1?\'switch-on\':\'switch-off\';\n                var show = this.state.show;\n\n                var sessionStr = sessionStorage.getItem(this.props.userWidgetID);\n                var sessionValue = sessionStr?JSON.parse(sessionStr):\'\';\n\n\n                 var path = typeof this.props.imagePath !== \'undefined\' ?\n                        this.props.imagePath : \n                        sessionValue ? this.props.statusSet[sessionValue.modeIndex].bgImagePath : \n                        this.props.statusSet[0].bgImagePath;\n                var _state = typeof __props !== \'undefined\' ? __props : \'\';\n                var statusName = sessionValue?sessionValue.modeName:this.props.statusSet[0].statusName;\n                if(_state){\n                    this.props.statusSet.map(function(item,index){\n                        if(item.statusValue && item.statusValue == _state[item.statusField]){\n                            path = item.bgImagePath || \'\';\n                            statusName = item.statusName;\n                        }\n                    });\n                }\n                if(!this.state.show){//\u653E\u5165\u9009\u9879\u5361\u65F6 \u53D7swiper transform\u5F71\u54CDbug\u4FEE\u590D\n                    var swiperContain = document.querySelector(\'.swiper-container\');\n                    var swiperSlide = document.getElementsByClassName(\'swiper-slide\');\n                    var swiperDom = document.querySelector(\'.swiper-wrapper\');\n                    if(swiperContain && this.swiperHeight) {\n                        swiperContain.style.height = this.swiperHeight;//swiper\u9AD8\u5EA6\u8FD8\u539F\n                        swiperContain.style.top = this.swiperTop;\n                        swiperDom.style.transform = this.swiperDomStyle;\n                        if(swiperSlide){\n                            for(var i=0 ; i<swiperSlide.length;i++){\n                                swiperSlide[i].className = swiperSlide[i].className.replace(" swiper-no-swiping","") ;\n                            }\n                        }\n                    }\n                }\n                if(this.props.styleList && this.props.styleList.image instanceof Array && !path){\n                    this.props.styleList.image.map(function(item,index){\n                        if(item.name==\'noimage\'){\n                            path = JSON.parse(item.url).pictureUrl;\n                        }\n                    });\n                }\n\n                return (\n                    <div>\n                    <section {...this.props} className=\'widgetMode\' ref={this.props.ref} onTouchEnd={this.handleClick}>\n                        <img    src={path} className="widgetPic"/>\n                        <p className=\'modeName\'>{statusName}</p>\n                        <span   className=\'triangle-bottomright\'></span>\n                    </section>\n                       \n                        <section className={\'widgetModeSelect \'+(show?\'modeSelect-up\':\'modeSelect-down\')} style={{display:show?\'block\':\'none\'}}>\n                            <section onTouchEnd={this.cancelclock}></section>\n                            <section className="modeSelect" onTouchMove={this.endDefault}>\n                                <section className=\'selectbtn flex\'>\n                                    <span className=\'flex-cell\' onTouchEnd={this.cancelMode}>\u53D6\u6D88</span>\n                                    <span className=\'flex-cell\' onTouchEnd={this.submitMode}>\u786E\u5B9A</span>\n                                </section>\n                                <section className=\'mode\'>\n                                    <section onTouchStart={this.startrange} onTouchMove={this.moverange} \n                                        onTouchEnd={this.endrange}  className=\'modeList\'>\n                                    </section>\n                                    <p className=\'titleName\'>{this.props.text}</p>\n                                    <section className=\'listvalue flex-column\' style={{top:modetop+\'%\'}}>\n                                        <span className={(modeIndex-3)<0?\'line4\':\'line1\'}>{(modeIndex-3)<0?\'\':modeArr[modeIndex-3]}</span>\n                                        <span className={(modeIndex-2)<0?\'line4\':\'line1\'}>{(modeIndex-2)<0?\'\':modeArr[modeIndex-2]}</span>\n                                        <span className={(modeIndex-1)<0?\'line4\':\'line2\'}>{(modeIndex-1)<0?\'\':modeArr[modeIndex-1]}</span>\n                                        <span className=\'line3\'>{modeArr[modeIndex]}</span>\n                                        <span className={(modeIndex+1)>=modeArr.length?\'line4\':\'line2\'}>{(modeIndex+1)>=modeArr.length?\'\':modeArr[modeIndex+1]}</span>\n                                        <span className={(modeIndex+2)>=modeArr.length?\'line4\':\'line1\'}>{(modeIndex+2)>=modeArr.length?\'\':modeArr[modeIndex+2]}</span>\n                                        <span className={(modeIndex+3)>=modeArr.length?\'line4\':\'line1\'}>{(modeIndex+3)>=modeArr.length?\'\':modeArr[modeIndex+3]}</span>\n                                    </section>\n                                </section>\n                            </section>\n                        </section>\n                    </div>\n                );\n            }\n    })'
};